<?php
/**
 * CrowdApiTest
 * PHP version 5
 *
 * @category Class
 * @package  CrowdClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Crowd Usermanagement Rest Resources
 *
 * This is the crowd usermanagement rest resources endpoint documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace CrowdClient;

use \CrowdClient\Configuration;
use \CrowdClient\ApiException;
use \CrowdClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CrowdApiTest Class Doc Comment
 *
 * @category Class
 * @package  CrowdClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CrowdApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addUserToGroup
     *
     * Adds user as direct member of group.
     *
     */
    public function testAddUserToGroup()
    {
    }

    /**
     * Test case for authentication
     *
     * Authenticates a user. Does not generate an SSO token. For SSO please take a look at the SSO token resource..
     *
     */
    public function testAuthentication()
    {
    }

    /**
     * Test case for createGroup
     *
     * Adds a new group..
     *
     */
    public function testCreateGroup()
    {
    }

    /**
     * Test case for createUser
     *
     * Creates a new user.
     *
     */
    public function testCreateUser()
    {
    }

    /**
     * Test case for deleteGroup
     *
     * Deletes a group.
     *
     */
    public function testDeleteGroup()
    {
    }

    /**
     * Test case for deleteUser
     *
     * Removes a user..
     *
     */
    public function testDeleteUser()
    {
    }

    /**
     * Test case for getGroup
     *
     * Retrieves a group.
     *
     */
    public function testGetGroup()
    {
    }

    /**
     * Test case for getNestedGroupsOfUser
     *
     * Retrieves the groups that the user is a nested member of.
     *
     */
    public function testGetNestedGroupsOfUser()
    {
    }

    /**
     * Test case for getNestedUsersOfGroup
     *
     * Retrieves the users that are nested members of the specified group.
     *
     */
    public function testGetNestedUsersOfGroup()
    {
    }

    /**
     * Test case for getUser
     *
     * Retrieves the user details. Either username or key query parameter must be present..
     *
     */
    public function testGetUser()
    {
    }

    /**
     * Test case for search
     *
     * searches for a specific entity-type.
     *
     */
    public function testSearch()
    {
    }

    /**
     * Test case for setUsersAttributes
     *
     * Stores the user attributes. Attribute values will not be overwritten if not specified in attributes..
     *
     */
    public function testSetUsersAttributes()
    {
    }

    /**
     * Test case for updateGroup
     *
     * Updates an existing group.
     *
     */
    public function testUpdateGroup()
    {
    }

    /**
     * Test case for updateUser
     *
     * Updates a user.
     *
     */
    public function testUpdateUser()
    {
    }
}
